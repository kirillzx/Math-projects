(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    100223,       2089]
NotebookOptionsPosition[     94245,       1984]
NotebookOutlinePosition[     94618,       2000]
CellTagsIndexPosition[     94575,       1997]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Hometask 1. Multi-criteria tasks",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.821873384986822*^9, 3.821873410451415*^9}},
 TextAlignment->Center,ExpressionUUID->"1c9c5265-a49e-4f1f-80e2-710be756d163"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
2b9P69Se065vK7Csz4acSYbrvC7IT50JCYhMXbbYOqedwvhkzJlsapr7zvka
EhCvsMRIVT1jl/TU6s7PlplVHeBltGMqNAKCNhv7l+UgmlCV6a/ueee0IbN8
b9zZJQ/xCkAKDxzSGpsYn/ah16Q9PXV+Kcf8Kp8KRxS1dxtwkJsqol84Xd6/
ZvH26955GY048udNcHOx3x2zNRO45lfp1nWfwprP01FwfZHv7btKHOEYq2Ia
6VPc+aXvTizIdLlyfPQwCNp41i0npaXb5BKjoTrG1mKBOCS07dSTNy6e7u4X
z23TdwktRpSkuL82Wc890eSrJk7+/mHeT65e1jYNiatsyI9+6qKvyNkiqOP5
JKUR//MHRUFnvnQ6oyEHccYXo6T33L/2OrOolch1IOHrS2PsbQw0lIT5ILld
x17Ex9TgGD8/IAAAAPwCHCWgtcfeO798jpyA3FjZky+K8Cgyk80ZO9CJJFxj
jvsVfU1drZ0Wj9LbPppQmErtqChx0lGcvHqDnv2ThGZS9+MxyWyEn/GcaQrQ
2PGzdhwPaSHSP3V9YQYLHfZok8IyET5e0aliWx2i6nHobtbtk3AIQJDqxddF
6Y3tJCyiqI7IZNSn2R41WDoW4hcR3O7lV9L+xZrjEv3Obd4qPhHi2+deQ2sm
fe5mM8jV/m7ntmrOmT/7jF9RJ43wle+4ldPtt9o0GYL4RuznDCvqsZ+30Muy
Xl66OEkA4ltxyrMgufmLEjGbosPMDi3jGQEJnrWMqCkndvPCEIryfW+cHMcL
Tbl6+8UTG3PL05r3fGuIODq5Lc3J9cJK7ok07U2f2jx/Yrnr0LPUdgaB3lET
aW2/fyZn0+RzAW7ZyK8n2XqkLc/p5AV1TrOHQXyL9tgmhFXhvzSCWlEScN9I
mqNr42ZrP30YUdMLJQIAAIBfgMiGy103TVEeJym5WHv7szxil5bAhJaOogh/
y9P6lj5eKbW1mG5ml1CJSLHTlYREVR+YBJY0fzObziDBlc4nZ0+RgRRklYyc
K6nUT7vCTCo+1miL4hRRaPwY6X8MY9GdlK+mU74VDuSnYQAh8fVxdS1xQX7B
6RrO5YWt5M/nhGt97favmS8wHZI0isXDn2SIwYYbYm5obp+nJrfQhNMG+jfT
NnBDwSuT28skIUhylVVSaDnmywERUUE3D6zkG8k5oEtua8OXUQUTk+lgd3YN
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
GkMfDPf/b0hnUcrClBbNHb9o1Sl9vZSPi7N4LExOo5+iOPJeax+etc9uv1kf
3BzjfnPH7mnjBw1etEc/Pqm0siw1MNrdQs0fySvu79XFDPSuXg8OLoyyV171
z6zJclPPeqNg/m9+1UJoqQqxl5Ma0X/N6gO6On55jb2/CKjnggM5V2bd2wdK
e1dIjFwke/ZFQBkJTfu5Qd5LwcEozn1tcX/aAf0sUj3lJz8xAXk7Uu6Lg1sX
jmu7mBfpD8lqmsZVdXPO+afgaBvjKK3+4tNoJdZE+8hLDx8oMuqg6kW/yi9e
sdPg4PGYxEYfxc2rFM+qB0TjPtUGTEQxUp8j7zVg3MVjj6MLOzhBNiHV2kJx
45i2MRY5+YfqyvquhlZpyLXRb325B/S83g4OHpsSp3Zo8aJ5G6+eeFXWvcey
92U0Cjo94tai0RKT557QVQ+r67HLMBiNCjU13zNvbDtjRg4bOnhwP5HBw8eM
HfP1D2fO23z+uEf3nyTJo6SZPpWXGTFkqth/donNtN7ZAQdu2ykg8KHS4dXt
izN2zPAhYuKDBg4ZMqJdaRBbH99yzakX6KxgLMrfxFnn8aWX6Tg2/Cu2D4XZ
1KJoo3PnV0lBkBAkNnjI9CP7H3p4lX57xKMXgqPtNojHaCXgW0kUJqttqhdM
r83IjrR/ef/U3hES/ZBT7DQ4kNuS+rJwsxf7ZkCQ+IDBh48r+4c3MEFqAF/r
3eDgwNyWfNPd62YuWbRbTTWqqcODuPQWcm1mmJ3GXaXL587dvHHP2C4suxzP
pPaVHYQ/x2ERK6qc5WePGDl5t8rFN6UdbbnFZRDRTRWZ2Zlhjvetg2NKy0jd
iRcqsTYvL9DNth0LrQvn9mwfLbX3jpmtqfVXP3R2840KQwlw6c5pDHG/v3/D
qPHQ3OfB9RRcp6fGJDcVFUW62t0+d+HcuXPX9Z68DInOrye1db93B5dSnRwX
4vl1YWwsbc3uHP1n4baNR4+rmbYvrK1fenwprttTteG2YYY8V2dLC13rt8Eo
YvevTGB8dqKLydNzPeTs0d1r/pk79v+TpMQnjJuzZet5TcNEDJnZVYX1SnB8
wKI211ZnRoTZqV96ZKJr6exqY+z44MAoCBLrPDiQmzdKXXKe681VEDQYmrfs
iJ5ObAPzt7/eA3pa7wYHg8euCbw099/xq1YfNXiZQ25/BI+KrssMeWtw77Ts
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
AF4B1QKH8oQNTrbjJ6sXrVi20eFsXufA/5L8PLeDGz+YvUh/vmM271nSYnTI
xHIB7X5K4KXIO8HpDJWikZQrZud5GBh5xBakZMXneJsoz1rVv+CSUNU64PP9
0t5OWsjlXAanacD2SMKrzyrxMyaI2StPxl59+L84BEQmoGXnhPpH3Ui+0ajK
1kws4tTWBB05HFSUXts5dCQTtjDbOmiM3tEdKADAUFQMHHLlwbGN17/dpfvZ
UgMti9g6Uv5TzkAsJxl3jhusW7V91a7vohqFo7zSKm63JSKRWCIe9oUkUS+r
tMzX9P3t585E38nMiL7psmud+728xi4Bu6w+yXUtQfxy4laLMykZbTzFUG8f
PZ2UW/m4u1/Z71ysuCo58LqkpL2UmWD3W2K5xcWsZLpgdGfznzlJxYo5SSQ/
v0UQcp+k5oedpwSVNHT1CQf1RiQlvb111DBn39jkB6UjSskAAKhI9cChWMOa
SqNdz5jvWP7H3d+k0ujdfX1SnoBV9jDK+W/6O0wO+3vdrmSMQhWGmkgOuzI+
bOOcd7SWLtEz2GBiYXzIPbSU3cqXyMSMjrIIl2UzZkxeomt22ikoPifK1zM4
s7DuKXfY8of+3ub8qlCrKYtt3ZOrK7peY022YoR9nNK4cJfdxrofLtTdYmxq
Zvb355mbmZpu/XwdJTAwo4b1RrefB4A3hjqBQ94vaCnID7nobLTnmHvgt8Hh
wWGhoYE+vs4Uwz3f+SQ9rlAlJy5sb6sszIxSy83kgspy1jDPYRSBoyoh0lB7
5qSpmlqLPzC0sQrIaxORz5738/ht91Mpq+ZNf2/uJ7u2HPUODwyIruAyeS/I
Sfdyq9Jy3Hdo749LqGRzVYobMhG3salMzTlFZVAL6lqGTb4rt0NCRm7sWYud
KxdMJ15gPEG8+9HJWyHFHSN6fxgAQFVqBQ65MvfMY3Er0sKcjZb+YY6Ghvb8
xUYHfBLvNwu4qu01SFZ2uof1Jg21aK+w8nTNZA6zSRD3sStpYRSdWX/W/8LF
KepRw39LNmRSHrMt0W61ttas5Uaf2YUm1g0+g2ogWUdTQXTE/q02iQy6qoUS
Yk5JVOzpzerNSWPDlr3X4puGW+xlMnGPYuRGOr/X+pnrzNTQWH0oojyfgf64
APBqqBs43m6kqDE1Lfr7bQeTWkdYAAgA8NZSbBN6q4Mtvjzjg8Ah76vNj4yJ
DkhIqOCIn/00AAAwiLKyrCFqn8UJD2PfQtbrHs1rQ0rkEnYlNeF2dPpdanUb
OgcCAAxLsUKKm+MoZvtc1zumVY3R13Jk/aJOQVNB5MWQ9EJaHW+M/goAACoj
+XnutmYOhpbh2SNqK/jGInu6m0upzufiG/gtr/51YgCANxDJzQw/6Oxk6hne
MPYSwiSnOTeVeiU4tLi1WyyT/hg5STn5lJ6S/uj+k/LRrmgEAHgbSOryfVy8
bI9TbjaMpaSwTE52N2Vd9j7yj836a9aa7T1gY0P5geIPm917TwVfuVvFwLGs
AABD4DOy/CPPHzW0jSxjCbrF/WMgdshkkh5OdWKg7SaDxbMGVdWNI4hf/YkS
fPEeqiMAAIZGdpUUR3hazd1kf7PmcYdgDDyx6hN111DtV2i/N2WocuwJBLHC
3Ds7tQ5tAwEAhkNK+e09Vckelst0LY+anb2enFHBIuVv+3Ma8kVe9+AAAP7P
kf0iKb+jvjQ14WZs5FW/ax6uJpv/FVfS0azWaX4AADDm9HUx6PWPMu7FXzth
ffluFae1F4EDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgbfZvuCePfg==
    "], {{0, 327}, {531, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{224.5714285714301, Automatic},
  ImageSizeRaw->{531, 327},
  PlotRange->{{0, 531}, {0, 327}}]], "Input",
 CellChangeTimes->{{3.821873308429244*^9, 3.821873311039335*^9}, {
  3.821873357243492*^9, 
  3.8218733660325193`*^9}},ExpressionUUID->"1edd73d1-90f7-42ad-9288-\
0dfd8bdb5e10"],

Cell[TextData[StyleBox["Compromise solution",
 FontSize->18,
 FontColor->RGBColor[0.5, 0, 0.5]]], "Text",
 CellChangeTimes->{{3.8218731355008497`*^9, 3.8218731392041216`*^9}, {
  3.8218732399068265`*^9, 
  3.821873249730174*^9}},ExpressionUUID->"41464a30-e1ff-453c-aaff-\
aa90232e63c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "x1"}], "+", "x2", "-", "6"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
  RowBox[{"x1", "+", "x2", "+", "2"}]}]}], "Input",
 CellChangeTimes->{{3.821873508376734*^9, 3.821873542943323*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e0275235-74e3-4a1b-89d6-faf81ec92eda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minf1", "=", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f1", "[", 
       RowBox[{"x1", ",", "x2"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"13", "x1"}], "+", 
         RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821873821995931*^9, 3.8218738941763515`*^9}, {
  3.8218739547918777`*^9, 3.8218739927790446`*^9}, {3.821874345779704*^9, 
  3.821874347741544*^9}, {3.821876816896872*^9, 3.8218768240434504`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"aa2450e2-70ed-4352-a190-eaca840349c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "10.`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4.`"}], ",", 
     RowBox[{"x2", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.821873896893425*^9, {3.8218739593242583`*^9, 3.821873993322649*^9}, 
   3.821874256473589*^9, 3.8218743481421*^9, 3.822302137038138*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f589f5c5-1bcd-4dd4-9636-0d8e85c15734"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxf2", "=", 
  RowBox[{"FindMaximum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f2", "[", 
       RowBox[{"x1", ",", "x2"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"13", "x1"}], "+", 
         RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821874005599271*^9, 3.821874008484827*^9}, {
  3.8218740516245537`*^9, 3.821874139372015*^9}, {3.8218742361208124`*^9, 
  3.821874264550336*^9}, {3.8218743307296705`*^9, 3.8218743419053307`*^9}, {
  3.821876805640176*^9, 3.821876811262328*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"89e6294e-b85d-47ba-ad74-df1a43b26056"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4.`"}], ",", 
     RowBox[{"x2", "\[Rule]", "1.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8218740904524107`*^9, 3.8218741095029974`*^9}, {
   3.8218742414998846`*^9, 3.821874265091511*^9}, {3.8218743364980555`*^9, 
   3.8218743432539086`*^9}, 3.822302137974047*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"e140e394-8e84-4fcb-b675-8324ab1d209a"]
}, Open  ]],

Cell["Identify a compromise variable", "Text",
 CellChangeTimes->{{3.822302179079548*^9, 3.8223021858001328`*^9}, {
  3.82230267544662*^9, 
  3.822302727256557*^9}},ExpressionUUID->"f65f1021-a287-400c-876a-\
4b6529e4bba6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fGen", "[", 
   RowBox[{"x1_", ",", "x2_", ",", "x3_"}], "]"}], ":=", "x3"}]], "Input",
 CellChangeTimes->{{3.8218741559404287`*^9, 3.821874197595185*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"83ef611d-7286-4098-ae92-5a8a689d0b49"],

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"7", "-", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "1"], "+", 
       SubscriptBox["x", "2"], "+", "2"}], ")"}]}], "7"], "\[LessEqual]", 
   SubscriptBox["x", "3"]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["x", "1"]}], "+", 
     SubscriptBox["x", "2"], "-", "6", "+", "10"}], 
    RowBox[{"-", "10"}]], "\[LessEqual]", 
   SubscriptBox["x", "3"]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox["x", "3"], "\[Rule]", "min"}], TraditionalForm]}],
 FormatType->
  "TraditionalForm",ExpressionUUID->"5ecc3353-c0c1-48bb-b5c1-a1292789c7ee"]], \
"Text",
 CellChangeTimes->{{3.8223022050255423`*^9, 3.822302289329358*^9}, {
  3.82230232157668*^9, 3.8223023706018443`*^9}, {3.82230250147544*^9, 
  3.8223025112456484`*^9}},
 TextAlignment->-0.5,
 FontSize->20,ExpressionUUID->"5a0d086b-a247-4023-abd5-8b364e723ac7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solution1", "=", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fGen", "[", 
       RowBox[{"x1", ",", "x2", ",", "x3"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", 
            RowBox[{
            "maxf2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
            "}"}]}], "+", "2"}], "\[GreaterEqual]", 
        RowBox[{
        "maxf2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{
            "minf1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
            "}"}]}], "-", "6"}], "\[LessEqual]", 
        RowBox[{
        "minf1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"13", "x1"}], "+", 
         RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}], "&&", 
       RowBox[{"x3", "\[GreaterEqual]", "0"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.82187422693021*^9, 3.8218742296540146`*^9}, {
  3.821874280477666*^9, 3.8218743894111357`*^9}, {3.8218744224765916`*^9, 
  3.821874423698626*^9}, {3.821874476514533*^9, 3.821874519465337*^9}, {
  3.8218746008225346`*^9, 3.8218747228173695`*^9}, {3.821874798074627*^9, 
  3.821874923541865*^9}, {3.82187498303815*^9, 3.821874991842657*^9}, {
  3.821875235549395*^9, 3.821875268166149*^9}, {3.8218757114925323`*^9, 
  3.8218757435096827`*^9}, {3.821875924975172*^9, 3.821875978992218*^9}, {
  3.821876109252754*^9, 3.821876113275981*^9}, {3.821876273796283*^9, 
  3.821876292741091*^9}, {3.8223027702224016`*^9, 3.822302774395726*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"810a3658-c682-447b-8876-9c085b1e1ac6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.05882352941176472`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4.`"}], ",", 
     RowBox[{"x2", "\[Rule]", "0.5882352941176471`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.05882352941176472`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.821874374347991*^9, 3.8218743897464795`*^9}, 
   3.8218744240340843`*^9, 3.8218745379867644`*^9, {3.8218746339069023`*^9, 
   3.82187465124522*^9}, {3.82187469727746*^9, 3.8218747242141485`*^9}, {
   3.8218748106337957`*^9, 3.821874863631899*^9}, {3.821874896762925*^9, 
   3.821874924779642*^9}, {3.8218749843523684`*^9, 3.8218749923571234`*^9}, {
   3.8218752503853855`*^9, 3.8218752695652814`*^9}, {3.8218757189128046`*^9, 
   3.821875743937955*^9}, 3.8218759362771297`*^9, 3.8218759793121986`*^9, {
   3.8218761097848644`*^9, 3.8218761137755127`*^9}, {3.8218762742595124`*^9, 
   3.8218762931843853`*^9}, 3.822302775480525*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"e560ab12-fbfd-47ff-8d44-6f224334f020"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f1", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"solution1", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "//", "Values"}], 
     ",", 
     RowBox[{
      RowBox[{"solution1", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "//", "Values"}]}],
     "]"}], ",", 
   RowBox[{"f2", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"solution1", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "//", "Values"}], 
     ",", 
     RowBox[{
      RowBox[{"solution1", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "//", "Values"}]}],
     "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.82230276495879*^9, 3.822302844425979*^9}, {
  3.8223077430862207`*^9, 3.8223077472553167`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"9615250b-8794-4ef8-a980-e1abe4423b98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9.411764705882353`"}], ",", "6.588235294117647`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8223028220657053`*^9, 3.8223028447067842`*^9}, 
   3.822307747898638*^9},
 Background->RGBColor[0.8274509803921568, 0.7019607843137254, 1.],
 CellLabel->"Out[80]=",ExpressionUUID->"797a917c-babb-4b08-8887-74b46bafe025"]
}, Open  ]],

Cell[TextData[StyleBox["Main criteria",
 FontSize->18,
 FontColor->RGBColor[0.5, 0, 0.5]]], "Text",
 CellChangeTimes->{{3.8223031135982437`*^9, 
  3.822303119800041*^9}},ExpressionUUID->"223b143e-8292-434f-934a-\
db79fc5bb263"],

Cell[BoxData[
 RowBox[{
  RowBox[{"concs", "=", "0.1"}], ";"}]], "Input",
 CellChangeTimes->{{3.8223031436430683`*^9, 3.8223031578241005`*^9}, {
  3.822303803229552*^9, 3.822303803401012*^9}, {3.8223038648940845`*^9, 
  3.82230387126808*^9}, {3.8223039392656865`*^9, 3.822303939962042*^9}, {
  3.822304529611126*^9, 3.822304529705323*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"c20ece75-7412-4120-a6ae-fde101b83d6f"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["x", "1"], "+", 
     SubscriptBox["x", "2"], "+", "2", "-", "7"}], "7"], "\[LessEqual]", 
   SubscriptBox["p", "1"]}], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"02ce48b7-7231-4655-9f16-b355a44050e4"]], \
"Text",
 CellChangeTimes->{{3.8223031790240765`*^9, 3.8223032452068515`*^9}, {
  3.822304573276706*^9, 3.8223045901031313`*^9}},
 FontSize->20,ExpressionUUID->"85577dd1-f9c8-40e3-ab58-44c70c995e4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]1", "=", 
  RowBox[{
   RowBox[{"maxf2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "*", "concs"}]}]], "Input",
 CellChangeTimes->{{3.822303274834773*^9, 3.82230328890901*^9}, {
  3.822303320545783*^9, 3.8223033233821826`*^9}, {3.8223033742042437`*^9, 
  3.822303376314129*^9}, {3.8223045526455555`*^9, 3.8223045555707874`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"1002e80d-b6c3-40f4-b606-541e025886ec"],

Cell[BoxData["0.7000000000000001`"], "Output",
 CellChangeTimes->{{3.8223033003610487`*^9, 3.822303324085281*^9}, 
   3.82230337976221*^9, 3.822303804870489*^9, {3.8223038672221766`*^9, 
   3.8223038728000555`*^9}, 3.822303941397053*^9, 3.8223045566037626`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"922c2da3-3eee-4cfa-bc78-7aaef6221869"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solution2", "=", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f1", "[", 
       RowBox[{"x1", ",", "x2"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"f2", "[", 
         RowBox[{"x1", ",", "x2"}], "]"}], "\[GreaterEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "maxf2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "-", 
          RowBox[{"concs", "*", 
           RowBox[{
           "maxf2", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], ")"}]}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"13", "x1"}], "+", 
         RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.822303950223106*^9, 3.8223040195534267`*^9}, {
  3.822304560545314*^9, 3.822304563918707*^9}, {3.8223046421853*^9, 
  3.8223046481803727`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e2befd5a-a443-45ca-9c54-48eff837719e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9.7`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4.`"}], ",", 
     RowBox[{"x2", "\[Rule]", "0.2999999999999998`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.822304005676547*^9, 3.822304019787819*^9}, 
   3.822304564603793*^9, 3.8223046592574053`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"c1fcf6ff-310c-4b82-82cf-ee7338082349"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f1", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"solution2", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "//", "Values"}], 
     ",", 
     RowBox[{
      RowBox[{"solution2", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "//", "Values"}]}],
     "]"}], ",", 
   RowBox[{"f2", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"solution2", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "//", "Values"}], 
     ",", 
     RowBox[{
      RowBox[{"solution2", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "//", "Values"}]}],
     "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8223046378588514`*^9, 3.822304697566841*^9}, {
  3.8223077615494003`*^9, 3.822307766975704*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"af107c76-a4c8-466b-a7c1-b7513092d88e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9.7`"}], ",", "6.3`"}], "}"}]], "Output",
 CellChangeTimes->{3.822304700127301*^9, 3.822307767614292*^9},
 Background->RGBColor[0.8274509803921568, 0.7019607843137254, 1.],
 CellLabel->"Out[81]=",ExpressionUUID->"1396e4fb-94a2-4e92-aa67-30841d0772e2"]
}, Open  ]],

Cell[TextData[StyleBox["Two criteria",
 FontSize->18,
 FontColor->RGBColor[0.5, 0, 0.5]]], "Text",
 CellChangeTimes->{{3.8218779634233284`*^9, 
  3.8218779696852355`*^9}},ExpressionUUID->"4bb42252-5539-4acc-8fa8-\
d21e2392ec83"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"concs1", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.05", ",", "0.1", ",", "0.15"}], "}"}], "*", 
    RowBox[{
    "minf1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"concs2", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.15", ",", "0.2"}], "}"}], "*", 
    RowBox[{
    "maxf2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8218779965378065`*^9, 3.821878012563343*^9}, {
  3.821878078999523*^9, 3.821878121793334*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"f3796c87-ab11-4285-9d05-0ac1d3e76e06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f1", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"f2", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{
        "maxf2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
        RowBox[{
        "concs2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"13", "x1"}], "+", 
        RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821878139043855*^9, 3.8218781517365575`*^9}, {
  3.8218782400999384`*^9, 3.8218782614223127`*^9}, {3.8218783242491693`*^9, 
  3.8218783256848016`*^9}, {3.8218786646186857`*^9, 3.821878679883413*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"190fdb68-5ead-4924-a545-53f6133e3289"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "10.`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4.`"}], ",", 
     RowBox[{"x2", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8218782621368933`*^9, 3.8218783261403117`*^9, 
  3.8218786832180653`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"9e94cecb-d56f-466f-9cb8-bc5a5477df38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f1", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"f2", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{
        "maxf2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
        RowBox[{
        "concs2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
      "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"13", "x1"}], "+", 
        RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218782712814074`*^9, 3.8218782713908043`*^9}, {
  3.8218783375440645`*^9, 3.821878338827731*^9}, {3.821878686615033*^9, 
  3.821878686786436*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"bc2e7a3c-530e-4725-b3e9-554166e18347"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "10.`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4.`"}], ",", 
     RowBox[{"x2", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8218782722880135`*^9, 3.8218783392471347`*^9, 
  3.8218786875205936`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"988db73f-2c56-4595-a4e3-64f72358bc2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f1", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"f2", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{
        "maxf2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
        RowBox[{
        "concs2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
      "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"13", "x1"}], "+", 
        RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218782758082657`*^9, 3.821878275917426*^9}, {
  3.8218783417060137`*^9, 3.8218783456515026`*^9}, {3.8218786901203575`*^9, 
  3.821878690307392*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"79994fd7-35bc-44ff-9bbd-caaffdf81ae9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "10.`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4.`"}], ",", 
     RowBox[{"x2", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.821878276198451*^9, 3.8218783460734005`*^9, 
  3.8218786906511803`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"0c41ea91-0477-428a-a8dd-8205fcb5e5e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f2", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"f1", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}], "\[GreaterEqual]", 
       RowBox[{
        RowBox[{
        "minf1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
        RowBox[{
        "concs1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"13", "x1"}], "+", 
        RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821878297184747*^9, 3.821878300350466*^9}, {
  3.8218784046129923`*^9, 3.8218784226633525`*^9}, {3.8218785568864794`*^9, 
  3.8218785675572405`*^9}, {3.821878601849781*^9, 3.821878639728075*^9}, {
  3.822304757535607*^9, 3.822304772849779*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"b3ed112a-c621-40ed-a539-8de162c82ff6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4.`"}], ",", 
     RowBox[{"x2", "\[Rule]", "1.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8218784146751966`*^9, 3.8218784191926203`*^9}, {
  3.82187855908473*^9, 3.8218785681141634`*^9}, {3.821878604697197*^9, 
  3.821878640181242*^9}, {3.822304762585329*^9, 3.8223047737791615`*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"9aa7d86e-6b4e-419f-b3d5-4cb38ab31fc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f2", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"f1", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}], "\[GreaterEqual]", 
       RowBox[{
        RowBox[{
        "minf1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
        RowBox[{
        "concs1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
      "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"13", "x1"}], "+", 
        RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218784463310256`*^9, 3.8218784464716516`*^9}, {
  3.8218786461663084`*^9, 3.8218786494797726`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"12501a9f-918b-4958-a2a5-c28e0d63e5b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4.`"}], ",", 
     RowBox[{"x2", "\[Rule]", "1.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8218784468462076`*^9, 3.8218786513846483`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"194a647b-4846-430e-bb66-a63abc1c038e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f2", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"f1", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}], "\[GreaterEqual]", 
       RowBox[{
        RowBox[{
        "minf1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
        RowBox[{
        "concs1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
      "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"13", "x1"}], "+", 
        RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82187845785338*^9, 3.821878466964044*^9}, {
  3.8218786541533422`*^9, 3.8218786573812466`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"cbb03cfe-0280-46a9-815d-dd39afa27d15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "4.`"}], ",", 
     RowBox[{"x2", "\[Rule]", "1.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8218784583533998`*^9, 3.821878467385909*^9}, 
   3.8218786578500233`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"f95a4ad6-c5df-4df4-ac8d-66190ed7b674"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Red", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218787022316494`*^9, 3.821878730649952*^9}, {
  3.8223050504725485`*^9, 3.822305063501219*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"f0432a94-6929-4cb3-b831-d01946f880e0"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 0, 0], Thickness[Large], LineBox[{{4, 0}, {4, 1}}]},
  Axes->True,
  ImageSize->{644.1666666666682, Automatic}]], "Output",
 CellChangeTimes->{{3.8218787193231077`*^9, 3.821878730915104*^9}, {
  3.8223050536614933`*^9, 3.8223050639386597`*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"12093c70-aba8-492b-89e9-989448f6e5e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f1", "[", 
    RowBox[{"4", ",", "1"}], "]"}], ",", 
   RowBox[{"f2", "[", 
    RowBox[{"4", ",", "1"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8223048006816473`*^9, 3.822304805330717*^9}, {
  3.8223077778863516`*^9, 3.8223077809559917`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"607f9f03-07ca-44cf-805a-3820a590bb81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9"}], ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.8223048057835016`*^9, 3.8223077813521166`*^9},
 Background->RGBColor[0.8274509803921568, 0.7019607843137254, 1.],
 CellLabel->"Out[82]=",ExpressionUUID->"07a78855-e355-4332-889e-95f86897cc74"]
}, Open  ]],

Cell[TextData[StyleBox["Equal Variation",
 FontSize->18,
 FontColor->RGBColor[0.5, 0, 0.5]]], "Text",
 CellChangeTimes->{{3.8223051124953556`*^9, 
  3.822305115414524*^9}},ExpressionUUID->"0bd95cf5-af6b-4f0e-a7b8-\
74ab92cb6dde"],

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SubscriptBox["x", "1"]}], "+", 
    SubscriptBox["x", "2"], "-", "6", "-", 
    SubscriptBox["f", "1"]}], "=", "0"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["x", "1"], "+", 
    SubscriptBox["x", "2"], "+", "2", "-", 
    SubscriptBox["f", "2"]}], "=", "0"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["x", "1"], "+", 
      SubscriptBox["x", "2"], "+", "2"}], 
     SubscriptBox["f", 
      RowBox[{"2", ",", "max"}]]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["x", "1"]}], "+", 
      SubscriptBox["x", "2"], "-", "6"}], 
     SubscriptBox["f", 
      RowBox[{"1", ",", "min"}]]]}], "=", "2"}], TraditionalForm]}],
 FormatType->
  "TraditionalForm",ExpressionUUID->"c42ba349-8b3c-4aa4-80f7-69bd0f241d44"]], \
"Text",
 CellChangeTimes->{{3.8223073887754955`*^9, 3.822307440142308*^9}, {
  3.8223075717275443`*^9, 3.8223076198857803`*^9}},
 TextAlignment->-0.5,
 FontSize->20,ExpressionUUID->"d7daa526-b339-4589-87c3-e351765a87e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f1", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"f2", "[", 
          RowBox[{"x1", ",", "x2"}], "]"}], 
         RowBox[{
         "maxf2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], 
        "+", 
        FractionBox[
         RowBox[{"f1", "[", 
          RowBox[{"x1", ",", "x2"}], "]"}], 
         RowBox[{
         "minf1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}], 
       "\[Equal]", "2"}], "&&", 
      RowBox[{
       FractionBox[
        RowBox[{"f2", "[", 
         RowBox[{"x1", ",", "x2"}], "]"}], 
        RowBox[{
        "maxf2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], 
       "\[Equal]", "0"}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"f1", "[", 
         RowBox[{"x1", ",", "x2"}], "]"}], "-", "fe1"}], "\[Equal]", "0"}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"f2", "[", 
         RowBox[{"x1", ",", "x2"}], "]"}], "-", "fe2"}], "\[Equal]", "0"}], "&&", 
      RowBox[{"fe1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"fe2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"13", "x1"}], "+", 
        RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "fe1", ",", "fe2"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8218791131974974`*^9, 3.821879150796179*^9}, {
  3.821879181612471*^9, 3.8218792080566463`*^9}, {3.8223048631904964`*^9, 
  3.8223048663831964`*^9}, {3.8223051450751476`*^9, 3.822305145184507*^9}, {
  3.8223052065311327`*^9, 3.8223052523588905`*^9}, {3.822305439610544*^9, 
  3.822305445804202*^9}, {3.8223055018643427`*^9, 3.8223055054738503`*^9}, {
  3.822305674145863*^9, 3.822305675067378*^9}, {3.82230575128155*^9, 
  3.822305804786322*^9}, {3.8223058588769054`*^9, 3.8223058632690024`*^9}, {
  3.8223058933857603`*^9, 3.8223058975768585`*^9}, {3.822306002634458*^9, 
  3.8223060336862493`*^9}, {3.8223072943764057`*^9, 3.822307297326274*^9}, {
  3.822307822778135*^9, 3.8223078644330845`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"8570c96c-def8-4132-a09a-5c09cccf9900"],

Cell[BoxData[
 TemplateBox[{
  "FindMinimum","nsol",
   "\"There are no points that satisfy the constraints \\!\\(\\*RowBox[{\\\"{\
\\\", RowBox[{RowBox[{RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.1`\\\"}], \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"6\\\"}], \\\"-\\\", \
\\\"x1\\\", \\\"+\\\", \\\"x2\\\"}], \\\")\\\"}]}], \\\"+\\\", \
RowBox[{\\\"0.14285714285714285`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"2\\\", \\\"+\\\", \\\"x1\\\", \\\"+\\\", \\\"x2\\\"}], \
\\\")\\\"}]}]}], \\\"\[Equal]\\\", \\\"2\\\"}], \\\",\\\", RowBox[{RowBox[{\\\
\"0.14285714285714285`\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"2\\\", \
\\\"+\\\", \\\"x1\\\", \\\"+\\\", \\\"x2\\\"}], \\\")\\\"}]}], \\\"\[Equal]\\\
\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"6\\\"}], \
\\\"-\\\", \\\"fe1\\\", \\\"-\\\", \\\"x1\\\", \\\"+\\\", \\\"x2\\\"}], \\\"\
\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"2\\\", \\\"-\\\", \
\\\"fe2\\\", \\\"+\\\", \\\"x1\\\", \\\"+\\\", \\\"x2\\\"}], \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{\\\"fe1\\\", \\\"\
\[GreaterEqual]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{\\\"fe2\\\", \\\"\
\[GreaterEqual]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"13\\\
\", \\\" \\\", \\\"x1\\\"}], \\\"+\\\", RowBox[{\\\"26\\\", \\\" \\\", \\\"x2\
\\\"}]}], \\\"\[LessEqual]\\\", \\\"78\\\"}], \\\",\\\", RowBox[{\\\"0\\\", \
\\\"\[LessEqual]\\\", \\\"x1\\\", \\\"\[LessEqual]\\\", \\\"4\\\"}], \
\\\",\\\", RowBox[{\\\"0\\\", \\\"\[LessEqual]\\\", \\\"x2\\\", \\\"\
\[LessEqual]\\\", \\\"2\\\"}]}], \\\"}\\\"}]\\).\"",2,84,39,
   16421808898889663624,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.82187922068084*^9, 3.822305169135041*^9, 3.822305208478923*^9, 
   3.822305253203596*^9, 3.822305508007476*^9, 3.8223058052122993`*^9, 
   3.822305863684188*^9, 3.822305897795592*^9, {3.822306016666767*^9, 
   3.8223060341020956`*^9}, 3.822307298469469*^9, 3.8223078343322673`*^9, 
   3.822307864781847*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"13b10f4b-0774-42ea-a8cf-76f888652698"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Infinity]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "Indeterminate"}], ",", 
     RowBox[{"x2", "\[Rule]", "Indeterminate"}], ",", 
     RowBox[{"fe1", "\[Rule]", "Indeterminate"}], ",", 
     RowBox[{"fe2", "\[Rule]", "Indeterminate"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.821879220712105*^9, 3.822305169174697*^9, 3.8223052084945493`*^9, 
   3.8223052532192373`*^9, 3.82230550803144*^9, 3.8223058052282696`*^9, 
   3.8223058637008085`*^9, 3.8223058978112164`*^9, {3.82230601668277*^9, 
   3.8223060341100984`*^9}, 3.8223072984855003`*^9, 3.822307834356306*^9, 
   3.8223078647898617`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"367c7b65-2f9c-4e15-ace7-707a02725638"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f1", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"17", "x1"}], "+", 
        RowBox[{"3", "x2"}]}], "\[Equal]", "78"}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"13", "x1"}], "+", 
        RowBox[{"26", "x2"}]}], "\[LessEqual]", "78"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "4"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "x2", "\[LessEqual]", "2"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8223063241597614`*^9, 3.8223063314840565`*^9}, {
  3.8223063905292215`*^9, 3.822306431860056*^9}, {3.82230675494706*^9, 
  3.822306772620751*^9}, {3.82230692381218*^9, 3.822306931098301*^9}, {
  3.822307052602956*^9, 3.8223070529919558`*^9}, {3.822307169698148*^9, 
  3.822307170048273*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"acfbe4ea-1524-4e21-a7da-06ddb228d1c8"],

Cell[BoxData[
 TemplateBox[{
  "FindMinimum","nsol",
   "\"There are no points that satisfy the constraints \\!\\(\\*RowBox[{\\\"{\
\\\", RowBox[{RowBox[{RowBox[{RowBox[{\\\"17\\\", \\\" \\\", \\\"x1\\\"}], \\\
\"+\\\", RowBox[{\\\"3\\\", \\\" \\\", \\\"x2\\\"}]}], \\\"\[Equal]\\\", \
\\\"78\\\"}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"13\\\", \\\" \\\", \
\\\"x1\\\"}], \\\"+\\\", RowBox[{\\\"26\\\", \\\" \\\", \\\"x2\\\"}]}], \\\"\
\[LessEqual]\\\", \\\"78\\\"}], \\\",\\\", RowBox[{\\\"0\\\", \
\\\"\[LessEqual]\\\", \\\"x1\\\", \\\"\[LessEqual]\\\", \\\"4\\\"}], \
\\\",\\\", RowBox[{\\\"0\\\", \\\"\[LessEqual]\\\", \\\"x2\\\", \\\"\
\[LessEqual]\\\", \\\"2\\\"}]}], \\\"}\\\"}]\\).\"",2,78,36,
   16421808898889663624,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.822307170601343*^9},
 CellLabel->
  "During evaluation of \
In[78]:=",ExpressionUUID->"099a5564-20f7-4e5a-a8a9-e876cb3410fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Infinity]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "Indeterminate"}], ",", 
     RowBox[{"x2", "\[Rule]", "Indeterminate"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8223064215666895`*^9, 3.822306432189863*^9}, {
   3.822306768807494*^9, 3.822306773129945*^9}, {3.822306926242188*^9, 
   3.822306931940821*^9}, 3.822307055348451*^9, 3.822307170609312*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"d4a4f2aa-173a-41fd-93f6-111c62d96062"]
}, Open  ]],

Cell[TextData[StyleBox["Solutions",
 FontSize->18,
 FontColor->RGBColor[0.5, 0, 0.5]]], "Text",
 CellChangeTimes->{{3.822308306268837*^9, 
  3.8223083087841454`*^9}},ExpressionUUID->"bd7e3a44-ccc4-4146-90f1-\
d06dc394e251"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Compromise solution\>\"", ",", "\"\<Main criteria\>\"", ",", 
       "\"\<Two criteria\>\"", ",", "\"\<Equal variation\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "9.41"}], ",", "6.58"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "9.7"}], ",", "6.3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "9"}], ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "7"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", "LightPurple", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.822307870920682*^9, 3.8223080883499613`*^9}, {
  3.8223082531415367`*^9, 3.8223082788389444`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"5734e7b8-a6a9-4d2f-b24b-656945e047a3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Compromise solution\"\>", "\<\"Main criteria\"\>", "\<\"Two \
criteria\"\>", "\<\"Equal variation\"\>"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "9.41`"}], ",", "6.58`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "9.7`"}], ",", "6.3`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "9"}], ",", "7"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "7"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[0.94, 0.88, 0.94]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8223079504374375`*^9, {3.8223079842734766`*^9, 3.822308034623593*^9}, {
   3.8223080665791636`*^9, 3.822308088999627*^9}, {3.8223082614237843`*^9, 
   3.8223082794280815`*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"fb2e7dd0-1055-48c4-b683-82e89ceb6c80"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.2 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 257, 3, 53, "Subsubsection",ExpressionUUID->"1c9c5265-a49e-4f1f-80e2-710be756d163"],
Cell[840, 27, 54906, 905, 182, "Input",ExpressionUUID->"1edd73d1-90f7-42ad-9288-0dfd8bdb5e10"],
Cell[55749, 934, 286, 6, 46, "Text",ExpressionUUID->"41464a30-e1ff-453c-aaff-aa90232e63c4"],
Cell[56038, 942, 450, 11, 60, "Input",ExpressionUUID->"e0275235-74e3-4a1b-89d6-faf81ec92eda"],
Cell[CellGroupData[{
Cell[56513, 957, 867, 21, 35, "Input",ExpressionUUID->"aa2450e2-70ed-4352-a190-eaca840349c0"],
Cell[57383, 980, 453, 11, 39, "Output",ExpressionUUID->"f589f5c5-1bcd-4dd4-9636-0d8e85c15734"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57873, 996, 916, 22, 35, "Input",ExpressionUUID->"89e6294e-b85d-47ba-ad74-df1a43b26056"],
Cell[58792, 1020, 470, 10, 39, "Output",ExpressionUUID->"e140e394-8e84-4fcb-b675-8324ab1d209a"]
}, Open  ]],
Cell[59277, 1033, 222, 4, 41, "Text",ExpressionUUID->"f65f1021-a287-400c-876a-4b6529e4bba6"],
Cell[59502, 1039, 268, 5, 35, "Input",ExpressionUUID->"83ef611d-7286-4098-ae92-5a8a689d0b49"],
Cell[59773, 1046, 1029, 29, 136, "Text",ExpressionUUID->"5a0d086b-a247-4023-abd5-8b364e723ac7"],
Cell[CellGroupData[{
Cell[60827, 1079, 2313, 52, 84, "Input",ExpressionUUID->"810a3658-c682-447b-8876-9c085b1e1ac6"],
Cell[63143, 1133, 1024, 18, 39, "Output",ExpressionUUID->"e560ab12-fbfd-47ff-8d44-6f224334f020"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64204, 1156, 957, 25, 35, "Input",ExpressionUUID->"9615250b-8794-4ef8-a980-e1abe4423b98"],
Cell[65164, 1183, 371, 8, 59, "Output",ExpressionUUID->"797a917c-babb-4b08-8887-74b46bafe025"]
}, Open  ]],
Cell[65550, 1194, 227, 5, 46, "Text",ExpressionUUID->"223b143e-8292-434f-934a-db79fc5bb263"],
Cell[65780, 1201, 418, 7, 35, "Input",ExpressionUUID->"c20ece75-7412-4120-a6ae-fde101b83d6f"],
Cell[66201, 1210, 527, 13, 54, "Text",ExpressionUUID->"85577dd1-f9c8-40e3-ab58-44c70c995e4f"],
Cell[CellGroupData[{
Cell[66753, 1227, 456, 8, 35, "Input",ExpressionUUID->"1002e80d-b6c3-40f4-b606-541e025886ec"],
Cell[67212, 1237, 340, 4, 39, "Output",ExpressionUUID->"922c2da3-3eee-4cfa-bc78-7aaef6221869"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67589, 1246, 1240, 33, 35, "Input",ExpressionUUID->"e2befd5a-a443-45ca-9c54-48eff837719e"],
Cell[68832, 1281, 428, 11, 39, "Output",ExpressionUUID->"c1fcf6ff-310c-4b82-82cf-ee7338082349"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69297, 1297, 958, 25, 35, "Input",ExpressionUUID->"af107c76-a4c8-466b-a7c1-b7513092d88e"],
Cell[70258, 1324, 308, 6, 59, "Output",ExpressionUUID->"1396e4fb-94a2-4e92-aa67-30841d0772e2"]
}, Open  ]],
Cell[70581, 1333, 228, 5, 46, "Text",ExpressionUUID->"4bb42252-5539-4acc-8fa8-d21e2392ec83"],
Cell[70812, 1340, 690, 19, 60, "Input",ExpressionUUID->"f3796c87-ab11-4285-9d05-0ac1d3e76e06"],
Cell[CellGroupData[{
Cell[71527, 1363, 1152, 29, 35, "Input",ExpressionUUID->"190fdb68-5ead-4924-a545-53f6133e3289"],
Cell[72682, 1394, 388, 10, 39, "Output",ExpressionUUID->"9e94cecb-d56f-466f-9cb8-bc5a5477df38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73107, 1409, 1100, 29, 35, "Input",ExpressionUUID->"bc2e7a3c-530e-4725-b3e9-554166e18347"],
Cell[74210, 1440, 388, 10, 39, "Output",ExpressionUUID->"988db73f-2c56-4595-a4e3-64f72358bc2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74635, 1455, 1102, 29, 35, "Input",ExpressionUUID->"79994fd7-35bc-44ff-9bbd-caaffdf81ae9"],
Cell[75740, 1486, 386, 10, 39, "Output",ExpressionUUID->"0c41ea91-0477-428a-a8dd-8205fcb5e5e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76163, 1501, 1200, 30, 35, "Input",ExpressionUUID->"b3ed112a-c621-40ed-a539-8de162c82ff6"],
Cell[77366, 1533, 490, 10, 39, "Output",ExpressionUUID->"9aa7d86e-6b4e-419f-b3d5-4cb38ab31fc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77893, 1548, 1056, 28, 35, "Input",ExpressionUUID->"12501a9f-918b-4958-a2a5-c28e0d63e5b2"],
Cell[78952, 1578, 341, 8, 39, "Output",ExpressionUUID->"194a647b-4846-430e-bb66-a63abc1c038e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79330, 1591, 1051, 28, 35, "Input",ExpressionUUID->"cbb03cfe-0280-46a9-815d-dd39afa27d15"],
Cell[80384, 1621, 369, 9, 39, "Output",ExpressionUUID->"f95a4ad6-c5df-4df4-ac8d-66190ed7b674"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80790, 1635, 590, 15, 35, "Input",ExpressionUUID->"f0432a94-6929-4cb3-b831-d01946f880e0"],
Cell[81383, 1652, 366, 7, 147, "Output",ExpressionUUID->"12093c70-aba8-492b-89e9-989448f6e5e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81786, 1664, 382, 9, 35, "Input",ExpressionUUID->"607f9f03-07ca-44cf-805a-3820a590bb81"],
Cell[82171, 1675, 306, 6, 59, "Output",ExpressionUUID->"07a78855-e355-4332-889e-95f86897cc74"]
}, Open  ]],
Cell[82492, 1684, 229, 5, 46, "Text",ExpressionUUID->"0bd95cf5-af6b-4f0e-a7b8-74ab92cb6dde"],
Cell[82724, 1691, 1194, 38, 138, "Text",ExpressionUUID->"d7daa526-b339-4589-87c3-e351765a87e6"],
Cell[CellGroupData[{
Cell[83943, 1733, 2439, 59, 90, "Input",ExpressionUUID->"8570c96c-def8-4132-a09a-5c09cccf9900"],
Cell[86385, 1794, 2118, 34, 50, "Message",ExpressionUUID->"13b10f4b-0774-42ea-a8cf-76f888652698"],
Cell[88506, 1830, 754, 15, 39, "Output",ExpressionUUID->"367c7b65-2f9c-4e15-ace7-707a02725638"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89297, 1850, 1047, 26, 35, "Input",ExpressionUUID->"acfbe4ea-1524-4e21-a7da-06ddb228d1c8"],
Cell[90347, 1878, 925, 17, 27, "Message",ExpressionUUID->"099a5564-20f7-4e5a-a8a9-e876cb3410fd"],
Cell[91275, 1897, 513, 10, 39, "Output",ExpressionUUID->"d4a4f2aa-173a-41fd-93f6-111c62d96062"]
}, Open  ]],
Cell[91803, 1910, 223, 5, 46, "Text",ExpressionUUID->"bd7e3a44-ccc4-4146-90f1-d06dc394e251"],
Cell[CellGroupData[{
Cell[92051, 1919, 1110, 31, 22, "Input",ExpressionUUID->"5734e7b8-a6a9-4d2f-b24b-656945e047a3",
 CellOpen->False],
Cell[93164, 1952, 1053, 28, 66, "Output",ExpressionUUID->"fb2e7dd0-1055-48c4-b683-82e89ceb6c80"]
}, Open  ]]
}, Open  ]]
}
]
*)

